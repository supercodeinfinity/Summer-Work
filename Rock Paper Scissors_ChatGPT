# import libraries
import turtle
import random
import asyncio
from openai import OpenAI

# setup OpenAI
client = OpenAI(api_key="sk-proj-aybvUgE7uPwueZa1HsDkT3BlbkFJ4Dnr5u3bqLdC7BrAU3ai")

# setup screen
def setup_turtle():
    screen = turtle.Screen()
    screen.title("Rock, Paper, Scissors")
    screen.bgcolor("white")

    t = turtle.Turtle() # setup turtle
    t.hideturtle()
    t.speed(0)
    return t

# function to draw rock, paper, or scissors
def draw_choice(t, choice, position):
    t.penup()
    t.goto(position)
    t.pendown()

    if choice == 'scissors':
    # scissor drawing
        # scissor 1
        t.pensize(1)
        t.pencolor("#a9a9a9")  # light gray pen color
        t.fillcolor("#d3d3d3")  # light gray fill color
        t.begin_fill()  # begins scissor
        t.setheading(45)
        t.forward(250)
        t.setheading(180)
        t.forward(15)
        t.setheading(220)
        t.forward(230)
        t.setheading(290)
        t.forward(35)
        t.end_fill()  # ends scissor
        t.penup()
        t.setheading(45)
        t.forward(120)  # moved to teeth location
        for i in range(8):  # scissor 1 teeth
            t.pendown()
            t.pencolor("black")
            t.setheading(340)
            t.forward(18)
            t.setheading(110)
            t.forward(18)  # ends scissor 1 teeth

        # move to Scissor 2
        t.setheading(225)
        t.penup()
        t.forward(240)
        t.setheading(180)
        t.forward(10)
        t.setheading(90)
        t.forward(145)  # moved towards second scissor

        # scissor 2
        t.pendown()
        t.pencolor("#a9a9a9")  # light gray pen color
        t.fillcolor("#d3d3d3")  # light gray fill color
        t.begin_fill()  # begins scissor 2
        t.setheading(315)
        t.forward(250)
        t.setheading(270)
        t.forward(15)
        t.setheading(140)
        t.forward(230)
        t.setheading(90)
        t.forward(35)
        t.end_fill()  # ends scissor 2
        t.backward(5)
        t.penup()
        t.setheading(320)
        t.forward(110)  # moved to teeth location
        for i in range(8):  # scissor 2 teeth
            t.pendown()
            t.pencolor("black")
            t.setheading(20)
            t.forward(18)
            t.setheading(250)
            t.forward(18)  # ends scissor 2 teeth

        # handle 1
        t.setheading(225)
        t.penup()
        t.setheading(153)
        t.forward(225)
        t.setheading(0)  # moved to handle 1 location
        t.pencolor("black")  # black pen color
        t.fillcolor("#4169e1")  # blue fill color
        t.pendown()
        t.begin_fill()  # begins outer handle circle
        t.circle(50)
        t.end_fill()  # ends outer handle circle
        t.setheading(90)
        t.penup()
        t.forward(15)
        t.setheading(0)  # moved to inner circle location
        t.pendown()
        t.pencolor("black")  # black pen color
        t.fillcolor("white")  # white fill color
        t.begin_fill()  # begins inner handle circle
        t.circle(35)
        t.end_fill()  # ends inner handle circle

        # handle 2
        t.penup()
        t.setheading(270)
        t.forward(130)
        t.setheading(0)  # moved to handle 2 location
        t.pendown()
        t.pencolor("black")  # black pen color
        t.fillcolor("#4169e1")  # blue fill color
        t.begin_fill()  # begins outer handle circle
        t.circle(50)
        t.end_fill()  # ends outer handle circle
        t.setheading(90)
        t.penup()
        t.forward(15)
        t.setheading(0)  # moved to inner circle location
        t.pendown()
        t.pencolor("black")  # black pen color
        t.fillcolor("white")  # white fill color
        t.begin_fill()  # begins inner handle circle
        t.circle(35)
        t.end_fill()  # ends inner handle circle

        # screw
        t.penup()
        t.setheading(0)
        t.forward(93)
        t.setheading(90)
        t.forward(97)  # moved to screw location
        t.pendown()
        t.pencolor("#a9a9a9")  # dark gray pen color
        t.fillcolor("#5a5a5a")  # gray pen color
        t.begin_fill()  # begins screw
        t.circle(7)
        t.end_fill()  # ends screw
        t.hideturtle()  # hides turtle


    if choice == 'rock':
    # rock drawing
        # main rock body
        t.pencolor("#b3b2b0")  # gray pen color
        t.fillcolor("#b3b2b0")  # gray fill color
        t.pensize(1)
        t.setheading(0)
        t.pendown()
        t.begin_fill()
        t.circle(50)
        t.end_fill()

        # bottom lump
        t.setheading(0)
        t.forward(15)
        t.setheading(0)  # moved to bottom of rock
        t.begin_fill()  # begins lump
        t.circle(20)
        t.end_fill()  # ends lump

        # right lump
        t.setheading(90)
        t.forward(30)
        t.setheading(0)
        t.forward(20)  # moved to right of rock
        t.begin_fill()  # begins lump
        t.circle(20)
        t.end_fill()  # ends lump

        # right eye
        t.penup()
        t.setheading(90)
        t.forward(50)
        t.setheading(180)
        t.forward(10)  # moved to right eye location
        t.pendown()  # eye white
        t.pencolor("black")
        t.fillcolor("white")
        t.begin_fill()
        t.circle(8)
        t.end_fill()
        t.penup()  # finished eye white
        t.setheading(180)
        t.forward(5)
        t.setheading(270)
        t.forward(5)  # moved to right pupil location
        t.pendown()  # eye pupil
        t.fillcolor("black")
        t.begin_fill()
        t.circle(3)
        t.end_fill()  # finished eye pupil

        # left eye
        t.penup()
        t.setheading(90)
        t.forward(5)
        t.setheading(180)
        t.forward(35)  # moved to left eye location
        t.pendown()  # eye white
        t.pencolor("black")
        t.fillcolor("white")
        t.begin_fill()
        t.circle(8)
        t.end_fill()  # finished eye white
        t.penup()
        t.setheading(180)
        t.forward(5)
        t.setheading(270)
        t.forward(5)  # moved to left pupil location
        t.pendown()  # eye pupil
        t.fillcolor("black")
        t.begin_fill()
        t.circle(3)
        t.end_fill()  # finished eye pupil

        # eyebrows
        t.penup()
        t.setheading(90)
        t.forward(8)
        t.setheading(0)  # moved to left eyebrow location
        t.pendown()
        t.forward(10)  # left eyebrow
        t.setheading(0)
        t.penup()
        t.forward(30)
        t.setheading(0)  # moved to right eyebrow location
        t.pendown()
        t.forward(10)  # right eyebrow

        # cheeks
        t.penup()
        t.setheading(270)
        t.forward(40)
        t.setheading(180)
        t.forward(10)  # moved to right cheek location
        t.fillcolor("pink")
        t.begin_fill()  # right cheek
        t.circle(5)
        t.end_fill()  # finished right cheek
        t.setheading(180)
        t.forward(35)  # moved to left cheek location
        t.fillcolor("pink")
        t.begin_fill()  # left cheek
        t.circle(5)
        t.end_fill()  # finished left cheek

        # Mouth
        t.setheading(270)  # moved to left dimple location
        t.forward(15)
        t.pendown()  # preparation
        t.pencolor("black")
        t.pensize(3)
        t.forward(10)  # left dimple
        t.backward(5)
        t.setheading(0)  # main mouth
        t.forward(35)
        t.setheading(270)
        t.forward(5)  # right dimple
        t.backward(10)

        # crown
        t.penup()
        t.setheading(90)
        t.forward(60)
        t.setheading(0)
        t.forward(15)
        t.setheading(90)  # moved to crown location
        t.pendown()  # crown drawing
        t.pencolor("#d9ad34")  # gold pen color
        t.fillcolor("#d9ad34")  # gold fill color
        t.begin_fill()
        t.forward(30)
        for i in range(3):  # spiky top
            t.setheading(225)
            t.forward(15)
            t.setheading(135)
            t.forward(15)
        t.setheading(270)
        t.forward(30)
        t.setheading(0)
        t.forward(64)
        t.end_fill()  # finished crown drawing

        # jewels
        t.penup()
        t.setheading(90)
        t.forward(40)
        t.setheading(180)  # moved to top of crown
        for i in range(4):  # draws 4 jewels
            t.fillcolor("#cf4ee6")  # pink pen color
            t.begin_fill()
            t.circle(5)
            t.end_fill()
            t.setheading(180)
            t.forward(22)  # finished jewels
        t.hideturtle()


    elif choice == 'paper':
    # paper drawing
        # left muscle
        t.setheading(0)
        t.pensize(1)
        t.pencolor("#e1c96e")  # pale tone pen color
        t.fillcolor("#e1c96e")  # pale tone fill color
        t.begin_fill()  # begins shoulder muscle
        t.circle(30)
        t.end_fill()  # ends shoulder
        t.penup()
        t.setheading(180)
        t.forward(15)
        t.setheading(90)
        t.forward(15)
        t.setheading(180)
        t.forward(15)  # moved to medium muscle location
        t.pendown()
        t.begin_fill()  # begins medium muscle
        t.setheading(0)
        t.circle(25)
        t.end_fill()  # ends medium muscle
        t.penup()
        t.setheading(180)
        t.forward(11)
        t.setheading(90)
        t.forward(30)
        t.setheading(180)
        t.forward(11)  # moved to small muscle location
        t.pendown()
        t.begin_fill()  # begins small muscle
        t.setheading(0)
        t.circle(17)
        t.end_fill()  # ends small muscle
        t.penup()
        t.setheading(180)
        t.forward(6)
        t.setheading(90)
        t.forward(25)
        t.setheading(180)
        t.forward(4)  # moved to hand location
        t.pendown()
        t.begin_fill()  # begins hand
        t.setheading(0)
        t.circle(10)
        t.end_fill()  # ends hand
        t.penup()
        t.setheading(90)
        t.forward(10)  # moved to finger marks location
        t.pendown()
        t.pencolor("black")  # black pen color
        t.pensize(1.5)
        t.forward(9)  # draws middle finger mark
        t.backward(9)
        t.setheading(180)
        t.penup()
        t.forward(6)  # moved to left finger location
        t.setheading(90)
        t.pendown()
        t.forward(6)  # draws left finger mark
        t.backward(6)
        t.penup()
        t.setheading(0)
        t.forward(12)
        t.setheading(90)  # moved to right finger location
        t.pendown()
        t.forward(6)  # draws right finger mark

        # right muscle
        t.penup()
        t.setheading(270)
        t.forward(89)
        t.setheading(0)
        t.forward(198)  # moved to shoulder muscle location
        t.pendown()
        t.pencolor("#e1c96e")  # pale tone pen color
        t.fillcolor("#e1c96e")  # pale tone fill color
        t.begin_fill()  # begins shoulder muscle
        t.circle(30)
        t.end_fill()  # ends shoulder muscle
        t.penup()
        t.setheading(0)
        t.forward(15)
        t.setheading(90)
        t.forward(15)
        t.setheading(0)
        t.forward(15)  # moved to medium muscle location
        t.pendown()
        t.begin_fill()  # begins medium muscle
        t.circle(25)
        t.end_fill()  # ends medium muscle
        t.penup()
        t.setheading(0)
        t.forward(11)
        t.setheading(90)
        t.forward(30)
        t.setheading(0)
        t.forward(11)  # moved to small muscle location
        t.pendown()
        t.begin_fill()  # begins small muscle
        t.circle(17)
        t.end_fill()  # ends small muscle
        t.penup()
        t.setheading(0)
        t.forward(6)
        t.setheading(90)
        t.forward(25)
        t.setheading(0)
        t.forward(4)  # moved to hand location
        t.pendown()
        t.begin_fill()  # begins hand
        t.circle(10)
        t.end_fill()  # ends hand
        t.penup()
        t.setheading(90)
        t.forward(10)  # moved to finger marks location
        t.pendown()
        t.pencolor("black")  # black pen color
        t.pensize(1.5)
        t.forward(9)  # draws middle finger mark
        t.backward(9)
        t.setheading(0)
        t.penup()
        t.forward(6)  # moved to right finger location
        t.setheading(90)
        t.pendown()
        t.forward(6)  # draws right finger mark
        t.backward(6)
        t.penup()
        t.setheading(180)
        t.forward(12)  # moved to left finger location
        t.setheading(90)
        t.pendown()
        t.forward(6)  # draws left finger mark

        # paper
        t.penup()
        t.setheading(180)
        t.forward(67)
        t.setheading(270)
        t.forward(160)
        t.setheading(180)
        t.forward(125)
        t.setheading(0)  # moved to bottom-left of paper

        t.pendown()
        t.pencolor("black")  # black pen color
        t.fillcolor("white")  # white pen color
        t.begin_fill()  # begins paper
        t.forward(125)
        t.setheading(90)
        t.forward(180)
        t.setheading(135)
        t.forward(20)
        t.setheading(270)
        t.forward(14.142)  # draws paper fold
        t.setheading(0)
        t.forward(14.142)
        t.backward(14.142)
        t.setheading(90)
        t.forward(14.142)  # ends paper fold
        t.setheading(180)
        t.forward(110.858)
        t.setheading(270)
        t.forward(194.142)
        t.end_fill()  # ends paper
        t.backward(180)
        t.penup()
        t.setheading(0)
        t.forward(10)  # moved to writing location
        t.pendown()
        for i in range(3):  # draws 6 lines total
            for j in range(5):  # draws 5 squiggles per line from the left
                t.pendown()
                t.setheading(300)
                t.forward(20)
                t.setheading(60)
                t.forward(20)
                t.setheading(300)  # ends squiggles
            t.penup()
            t.setheading(270)
            t.forward(30)  # moved down to next squiggle

            for j in range(5):  # draws 5 squiggles per line from the right
                t.pendown()
                t.setheading(240)
                t.forward(20)
                t.setheading(120)
                t.forward(20)
                t.setheading(240)  # ends squiggles
            t.penup()
            t.setheading(270)
            t.forward(30)  # moved down to next squiggle
        t.hideturtle()


# function to get fact from OpenAI
def get_fact(): # asks for a fact about rock-paper-scissors
    messages = [
        {"role": "system", "content": "Provide a fact about rock-paper-scissors."},
        {"role": "user", "content": "Give a fact!"}
    ]
    
    response = client.chat.completions.create(
        model="gpt-4o", # defines model
        messages=messages
    )
    
    fact = response.choices[0].message.content # provides fact
    return fact.strip()

# function to display fact
def display_fact(drawer, fact):
    drawer.penup()
    drawer.goto(-100, -180)
    drawer.pendown()
    drawer.pencolor("black")
    drawer.hideturtle()

# ask user
def get_user_choice(t):
    choice = turtle.textinput("Rock Paper and Scissors", "Rock, Paper, Scissors... Shoot! ").lower()
    while choice not in ['rock', 'paper', 'scissors']: # if other option is written
        print("Stop trying to impress me. Choose rock, paper, or scissors!!!")
        choice = turtle.textinput("Rock Paper and Scissors", "Rock, Paper, Scissors... Shoot! ").lower()
    return choice # stores choice from user

# ask computer
def get_computer_choice():
    return random.choice(['rock', 'paper', 'scissors']) # computer randomly chooses choice

# determine winner
def determine_winner(user_choice, computer_choice):
    if user_choice == computer_choice: # when both put the same choice
        return "It's a tie!!! Good game." # presents tie

    if (user_choice == 'rock' and computer_choice == 'scissors') or \
       (user_choice == 'scissors' and computer_choice == 'paper') or \
       (user_choice == 'paper' and computer_choice == 'rock'):
        return "YOU WIN!!! WOOOHOOO!!!" # presents user win

    return "Sorry... you lose... Good game!" # otherwise user loses

# game logistics
def play_game():
    t = setup_turtle() # defines and sets up turtle
    user_choice = get_user_choice(t) # obtain user choice
    computer_choice = get_computer_choice() # obtain user choice

    print(f"You chose: {user_choice}") # print user choice in console
    print(f"The computer chose: {computer_choice}") # print computer choice in console

    t.clear() # delete drawings

    draw_choice(t, user_choice, (-180, 100)) # draws user's choice at location provided
    draw_choice(t, computer_choice, (120, 100)) # draws computer's choice at location provided

    result = determine_winner(user_choice, computer_choice) # provide win or losing
    print(result) # print win of loss on console

    t.penup()
    t.pencolor("navy")
    t.goto(-30, -50)
    t.pendown()
    t.write(result, align="center", font=("Arial", 50, "normal"))

    # Fetch and display the fact
    fact = get_fact() # obtains fact
    display_fact(t, fact) # writes fact

    turtle.done()

# run the game
play_game()
